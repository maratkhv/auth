services:
  auth:
    build:
      context: .
      dockerfile: Dockerfile-app
    ports:
      - "8082:8082"
    environment:
      CONFIG_PATH: "./config/docker.yaml"
    depends_on: 
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        required: false
      migrations:
        condition: service_completed_successfully
    networks:
      - app

  db:
    image: "postgres:alpine"
    environment:
      POSTGRES_USER: "auth"
      POSTGRES_PASSWORD: "pwd"
      POSTGRES_DB: "authdb"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth -d authdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app
      - migrations
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: "redis:alpine"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
    networks:
      - app

  migrations:
    build:
      context: .
      dockerfile: Dockerfile-migrations
    environment:
      CONFIG_PATH: "./config/docker.yaml"
    depends_on: 
      db:
        condition: service_healthy
    networks:
      - migrations

networks:
  app:
    driver: bridge
  migrations:
    driver: bridge

volumes:
  pgdata:

# TODO: add profile for test service
